"use strict";
/*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.genUniqueString = void 0;
const node_crypto_1 = require("node:crypto");
const node_util_1 = require("node:util");
/**
 * Returns a unique string. If template is supplied and contains a replaceable string (see node library util.format)
 * the unique string will be applied to the template using util.format. If the template does not contain a replaceable
 * string the unique string will be appended to the template.
 *
 * @param {string} template - can contain a replaceable string (%s)
 * @returns {string}
 */
const genUniqueString = (template) => {
    const uniqueString = (0, node_crypto_1.randomBytes)(8).toString('hex');
    if (!template) {
        return uniqueString;
    }
    return template.includes('%s') ? (0, node_util_1.format)(template, uniqueString) : `${template}${uniqueString}`;
};
exports.genUniqueString = genUniqueString;
//# sourceMappingURL=genUniqueString.js.map